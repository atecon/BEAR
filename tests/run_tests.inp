clear
set verbose off
set assert stop

include "./src/Datatools.inp" --force

# Test head() and tail()
nulldata 10
series y = normal()
series x = normal()
list L = y x
matrix m = seq(1,6)' ~ seq(1,6)'

head(m)      # initial 5 rows
tail(m, 2)  # only last two rows
tail(m, 7)  # all rows

head(y, 5)   # initial 5 rows
tail(y, 2)  # last two rows
tail(y, (2+$nobs))  # all rows

head(L, 2)   # initial 2 rows
tail(L, 2)  # last two rows
tail(L, (2+$nobs))  # all rows


# is_str_series()
nulldata 3
series y = normal()
y[3] = NA
series d = {NA, 1, 2}
setinfo d --discrete
series s = {1, 2, 2}'
strings S = defarray("A", "B")
stringify(s, S)

assert(is_str_series(y) == FALSE)
assert(is_str_series(d) == FALSE)
assert(is_str_series(s) == TRUE)

# is_continuous_series()
assert(is_continuous_series(y) == TRUE)
assert(is_continuous_series(s) == FALSE)
assert(is_continuous_series(d) == FALSE)

# is_discrete_series()
assert(is_discrete_series(y) == FALSE)
assert(is_discrete_series(s) == FALSE)
assert(is_discrete_series(d) == TRUE)

# nunique()
nulldata 4
series d = {NA, 1, 2, 1}
series s = {1, 2, 2, 1}'
strings S = defarray("A", "B")
stringify(s, S)

matrix d_nvals = nuniq(d)
print d_nvals
assert(d_nvals[1,1] == 1)
assert(d_nvals[1,2] == 2)
assert(d_nvals[2,1] == 2)
assert(d_nvals[2,2] == 1)

matrix s_nvals = nuniq(s)
assert(s_nvals[1,2] == 2)
assert(s_nvals[2,2] == 2)
assert(rnameget(s_nvals)[1] == "A")
assert(rnameget(s_nvals)[2] == "B")


# nmissing
nulldata 3
series y = {1, NA, 3}
series x = {NA, NA, -1}

matrix nmiss = nmissing(y)
assert(nmiss == 1)
matrix nmiss = nmissing(x)
assert(nmiss == 2)
print nmiss

list L = y x
matrix nmiss = nmissing(L)
print nmiss
